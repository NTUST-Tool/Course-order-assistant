name: "CI"
on:
  push:
    paths:
      - "src/**"
      - "build.rs"
      - "Cargo.toml"
      - "Cargo.lock"
      - "resources/**"
      - ".github/workflows/ci.yaml"

jobs:
  build:
    name: build ${{ matrix.os }} app
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-13, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: setup on non-Linux
        uses: actions-rust-lang/setup-rust-toolchain@v1
        if: matrix.os != 'ubuntu-latest'

      - name: setup on Linux
        uses: actions-rust-lang/setup-rust-toolchain@v1
        if: matrix.os == 'ubuntu-latest'
        with:
          target: x86_64-unknown-linux-musl

      - name: build on non-Linux
        if: matrix.os != 'ubuntu-latest'
        run: cargo build --release

      - name: build on Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt install -y musl-tools
          cargo build --release --target x86_64-unknown-linux-musl

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-Build
          path: |
            target/x86_64-unknown-linux-musl/release/Course-order-assistant
            target/release/Course-order-assistant
            target/release/Course-order-assistant.exe

  update-release:
    name: Update Latest Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Get latest release
        id: get_latest_release
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const releases = await github.rest.repos.listReleases({ owner, repo });
            if (releases.data.length === 0) {
              core.setFailed('No releases found to update.');
              return;
            }
            const latestRelease = releases.data[0];
            core.setOutput('release_id', latestRelease.id);
            core.setOutput('upload_url', latestRelease.upload_url);
            core.setOutput('release_tag', latestRelease.tag_name)

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: prepare macos-latest arifacts
        run: |
          mkdir release-assets
          mv macos-latest-Build/release/Course-order-assistant ./Course-order-assistant
          chmod +x Course-order-assistant
          zip Course-order-assistant-macos-arm64.zip Course-order-assistant

      - name: prepare macos-13 arifacts
        run: |
          mv macos-13-Build/release/Course-order-assistant ./Course-order-assistant
          chmod +x Course-order-assistant
          zip Course-order-assistant-macos-amd64.zip Course-order-assistant

      - name: prepare linux arifacts
        run: |
          mv ubuntu-latest-Build/x86_64-unknown-linux-musl/release/Course-order-assistant release-assets/Course-order-assistant
          chmod +x Course-order-assistant
          zip Course-order-assistant-linux.zip Course-order-assistant

      - name: prepare windows arifacts
        run: |
          mv windows-latest-Build/release/Course-order-assistant.exe ./Course-order-assistant.exe

      - name: Display structure of downloaded files
        run: ls -R

      - name: Delete existing release assets
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const release_id = ${{ steps.get_latest_release.outputs.release_id }};
            const assets = await github.rest.repos.listReleaseAssets({
                owner,
                repo,
                release_id
            });
            for (const asset of assets.data) {
                console.log(`Deleting asset ${asset.name}`);
                await github.rest.repos.deleteReleaseAsset({
                    owner,
                    repo,
                    asset_id: asset.id
                });
            }

      - name: Upload Release Asset macos-latest
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_latest_release.outputs.release_tag }}
          files: |
            Course-order-assistant-macos-arm64.zip
            Course-order-assistant-macos-amd64.zip
            Course-order-assistant-linux.zip
            Course-order-assistant.exe
